services:
  nginx-proxy:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "37777:37777"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./stream.conf:/etc/nginx/stream.conf:ro
    networks:
      - proxy
    depends_on:
      forgejo:
        condition: service_started
      # yacht:
      #   condition: service_started
      # mysql:
      #   condition: service_healthy
      # adminer:
      #   condition: service_started

  forgejo:
    image: codeberg.org/forgejo/forgejo:1.21.11-1
    container_name: forgejo
    ports:
      - "2222:22"
    environment:
      - USER_UID=1000
      - USER_GID=1000
      - FORGEJO__server__ROOT_URL=http://git.domain.local/
    volumes:
      - forgejo_data:/data
    networks:
      - proxy

  # yacht:
  #   image: selfhostedpro/yacht
  #   container_name: yacht
  #   ports:
  #     - "8000:8000"
  #   volumes:
  #     - yacht_data:/config
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   networks:
  #     - proxy

  # mysql:
  #   image: mysql:8.0
  #   container_name: mysql
  #   restart: always
  #   ports:
  #     - "3306:3306"
  #   environment:
  #     MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
  #     MYSQL_DATABASE: ${MYSQL_DATABASE}
  #     MYSQL_USER: ${MYSQL_USER}
  #     MYSQL_PASSWORD: ${MYSQL_PASSWORD}
  #     TZ: ${MYSQL_TZ}
  #   volumes:
  #     - mysql_data:/var/lib/mysql
  #   networks:
  #     - proxy
  #   healthcheck:
  #     test: ["CMD-SHELL", "mysqladmin ping -uroot -p$$MYSQL_ROOT_PASSWORD || exit 1"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

  # adminer:
  #   image: adminer
  #   container_name: adminer
  #   restart: always
  #   ports:
  #     - "8080:8080"
  #   networks:
  #     - proxy
  #   depends_on:
  #     mysql:
  #       condition: service_healthy

volumes:
  forgejo_data:
  # yacht_data:
  # mysql_data:

networks:
  proxy:
    driver: bridge
